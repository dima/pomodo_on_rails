<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">
  <mx:Script>
    <![CDATA[
      import org.restfulx.services.http.XMLHTTPServiceProvider;
      import org.restfulx.utils.RxFileReference;
      import org.restfulx.utils.RxUtils;
      
      import pomodo.models.Account;
      import pomodo.models.Address;
      import pomodo.models.User;
      
      [Bindable]
      private var infoFormInvalid:Boolean;
      
      private var photo:RxFileReference;

      private function chooseFile():void {
        photo = new RxFileReference("avatar");
        photo.reference.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler, false, 0, true);
        photo.reference.addEventListener(Event.SELECT, selectFile, false, 0, true);
        photo.reference.addEventListener(Event.CANCEL, cancelBrowse, false, 0, true);
        photo.reference.browse();
      }

      private function selectFile(event:Event):void { 
        fileSelected(event)
      }
      
      private function cancelBrowse(event:Event):void {
        photo = null;
      }
      
      private function fileSelected(event:Event):void {
        updatePersonalInformation();
      }
      
      private function ioErrorHandler(event:Event):void {
        photo = null;        
      }
      
      private function updatePersonalInformation():void {
        var user:User = User(RxUtils.clone(Pomodo.models.currentUser));
        var account:Account = Account(RxUtils.clone(user.account));
        var address:Address = Address(RxUtils.clone(user.address));
        
        var accountModelDirty:Boolean = false;
        var addressModelDirty:Boolean = false;

        if (user.title != titleTextInput.text) {
          user.title = titleTextInput.text;
          user.update({onSuccess: onUserUpdate});
        }
        
        if (account.email != emailTextInput.text) {
          account.email = emailTextInput.text;
          accountModelDirty = true;
        }
        
        if (account.name != nameTextInput.text) {
          account.name = nameTextInput.text;
          accountModelDirty = true;
        }
        
        if (account.password != passwordTextInput.text && passwordTextInput.text != "") {
          account.password = passwordTextInput.text;
          accountModelDirty = true;
        }
        
        if (account.passwordConfirmation != passwordConfirmationTextInput.text 
          && passwordConfirmationTextInput.text != "") {        
          account.passwordConfirmation = passwordConfirmationTextInput.text;
          accountModelDirty = true;
        }
          
        if (photo) {
          account.attachment = photo;
          accountModelDirty = true;
        }
        
        if (accountModelDirty) {
          account.update({onSuccess: onAccountUpdate, targetServiceId: XMLHTTPServiceProvider.ID});
        }
        
        if (address.lineOne != lineOneTextInput.text) {
          address.lineOne = lineOneTextInput.text;
          addressModelDirty = true;
        }
        
        if (address.lineTwo != lineTwoTextInput.text) {
          address.lineTwo = lineTwoTextInput.text;
          addressModelDirty = true;
        }
        
        if (address.city != cityTextInput.text) {
          address.city = cityTextInput.text;
          addressModelDirty = true;
        }
        
        if (address.province != provinceTextInput.text) {
          address.province = provinceTextInput.text;
          addressModelDirty = true;
        }
         
        if (address.country != countryTextInput.text) {
          address.country = countryTextInput.text;
          addressModelDirty = true;
        }
         
        if (address.postcode != postcodeTextInput.text) {
          address.postcode = postcodeTextInput.text;
          addressModelDirty = true;
        }
        
        if (addressModelDirty) {
          // don't attempt to do file uploads over AMF because Flash FileReference.upload is brain-dead
          address.update({onSuccess: onAddressUpdate});
        }
      }
      
      private function onUserUpdate(user:User):void {
        Pomodo.models.currentUser = user;
      }
      
      private function onAccountUpdate(account:Account):void {
        photo = null;
        account.attachment = null;
        Pomodo.models.currentUser.account = account;
      }
      
      private function onAddressUpdate(address:Address):void {
        Pomodo.models.currentUser.address = address;
      }
    ]]>
  </mx:Script>
  <mx:EmailValidator source="{emailTextInput}" property="text" invalid="infoFormInvalid = true" 
    valid="infoFormInvalid = false"/>
  <mx:RegExpValidator source="{passwordConfirmationTextInput}" 
    property="text" expression="{passwordTextInput.text}" noMatchError="Passwords do not match"
    invalid="infoFormInvalid = true" valid="infoFormInvalid = false"/>
  <mx:StringValidator source="{passwordTextInput}" property="text" 
        minLength="1" invalid="infoFormInvalid = true"/>
    
  <mx:Image x="10" y="10" source="{Pomodo.models.currentUser.account.photoUrl}" width="100" height="100"
    click="chooseFile()"/>
  <mx:Form left="118" top="45" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" width="400">
    <mx:FormItem label="Username:" width="100%">
      <mx:TextInput text="{Pomodo.models.currentUser.account.login}" editable="false" width="200" borderStyle="none"/>
    </mx:FormItem>
    <mx:FormItem label="Password" required="true">
      <mx:TextInput id="passwordTextInput" width="190" displayAsPassword="true"/>
    </mx:FormItem>
    <mx:FormItem label="Confirm" required="true">
      <mx:TextInput id="passwordConfirmationTextInput" width="190" displayAsPassword="true"/>
    </mx:FormItem>
    <mx:FormItem label="Name:" width="100%">
      <mx:TextInput id="nameTextInput" text="{Pomodo.models.currentUser.account.name}" width="100%"/>
    </mx:FormItem>
    <mx:FormItem label="Email:" width="100%">
      <mx:TextInput id="emailTextInput" text="{Pomodo.models.currentUser.account.email}" width="100%"/>
    </mx:FormItem>
    <mx:FormItem label="Title:" width="100%">
      <mx:TextInput id="titleTextInput" text="{Pomodo.models.currentUser.title}" width="100%"/>
    </mx:FormItem>
  </mx:Form>
  <mx:Label x="118" y="10" text="Personal Information:" styleName="infoTitle"/>
  <mx:Label x="118" y="230" text="Address:" styleName="infoTitle"/>
  <mx:Form x="95" y="265" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" width="423">
    <mx:FormItem label="Line 1:" width="100%">
      <mx:TextInput id="lineOneTextInput" text="{Pomodo.models.currentUser.address.lineOne}" width="100%"/>
    </mx:FormItem>
    <mx:FormItem label="Line 2:" width="100%">
      <mx:TextInput id="lineTwoTextInput" text="{Pomodo.models.currentUser.address.lineTwo}" width="100%"/>
    </mx:FormItem>
    <mx:FormItem label="City:" width="100%">
      <mx:TextInput id="cityTextInput" text="{Pomodo.models.currentUser.address.city}" width="150"/>
    </mx:FormItem>
    <mx:FormItem label="Province/State:" width="100%">
      <mx:TextInput id="provinceTextInput" text="{Pomodo.models.currentUser.address.province}" width="150"/>
    </mx:FormItem>
    <mx:FormItem label="Country:" width="100%">
      <mx:TextInput id="countryTextInput" text="{Pomodo.models.currentUser.address.country}" width="250"/>
    </mx:FormItem>
    <mx:FormItem label="Post Code:" width="100%">
      <mx:TextInput id="postcodeTextInput" text="{Pomodo.models.currentUser.address.postcode}" width="80"/>
    </mx:FormItem>
  </mx:Form>
  <mx:Button x="118" label="Update" bottom="10" click="updatePersonalInformation()" enabled="{!infoFormInvalid}"/>
</mx:Canvas>
