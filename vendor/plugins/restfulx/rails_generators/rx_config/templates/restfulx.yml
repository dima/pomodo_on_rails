# RestfulX code generation configuration options

# This option controls what the main Flex application file will be called.
# By default it will be equal to the name of your rails project camelized
project_name: <%= project_name %>

# This options determines what the root folder for generated Flex code is.
# By default 'app/flex'
flex_root: <%= flex_root %>

# By default flex models, commands, controllers and components are genearated into
# <flex-root>/<your rails project name> folder. If you'd like to customize the target folder 
# (to say append a "com" package before your rails project name) uncomment the line below
# base-package must follow the usual flex package notation (a string separated by ".")
base_package: <%= base_package %>

# Main RestfulX controller is typically named AppicationController. This controller is created in 
# <base-package>.controllers folder. You can customize the name by uncommenting the following line 
# and changing the controller name.
controller_name: <%= command_controller_name %>

# If you are using Rails on the back-end and Adobe AIR as the client you can generate Rails/Flex/AIR
# code to take advantage of synchronization (online/offline) support in RestfulX by changing the following
# option to true. By default distribution is disabled.
distributed: <%= distributed %>

# These options control code-generation options for view components, Flex and Rails models and so on.
# Allowing you to choose what controller patterns, layouts, attachment plugin you want to use, etc.
defaults: &defaults
  attachment_plugin:  'paperclip'              # => paperclip/attachment_fu
  controller_pattern: 'default'                # => default/resource_controller
  layouts:
    default:  'default'                        # => default (more coming soon)
  ignored:                                     # => ignored tables/fields won't appear in model.yml
    tables: [table1 table2]
    fields: [field1 field2]
    
# set up specific options for development environment
development:
  <<: *defaults

# set up specific options for test environment
test:
  <<: *defaults

# set up specific options for production environment
production:
  <<: *defaults
  
# The following special model.yml fields are supported.
#
# For example:
# attachment_field: [avatar]
#   * arg takes Paperclip field name, or takes [uploaded_data] for Attachment_Fu
# belongs_to: [account, profile]
# has_many: [announcements, files, folders, users]
# has_many_through: [permissions, roles]
#   * has_many :roles, :through => :permissions
# has_one:  [suitcase]
# polymorphic: [commentable]
# tree_model: [parent]
# layout: [default]
#   * default template is the only current theme, with more coming soon
# ignored_fields: [children_count, ancestors_count, descendants_count, position]
#   * specify fields you don't want generated for your template